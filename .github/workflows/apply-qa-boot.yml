name: apply-qa-boot
on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: boot-${{ github.ref }}
  cancel-in-progress: true

jobs:
  apply-qa-boot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    # Flag segur per gatejar passos segons si hi ha PAT
    env:
      HAS_WORKFLOW_PAT: ${{ secrets.WORKFLOW_PAT != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dev dependencies (commit lockfile)
        shell: bash
        run: |
          set -euo pipefail
          # 1) Elimina paquet incompatible si existeix
          npm pkg delete devDependencies.stylelint-config-prettier || true

          # 2) Instal·la toolchain QA amb versions compatibles
          npm i -D \
            vitest@^2.0.0 \
            @testing-library/react@^14.2.1 \
            @testing-library/jest-dom@^6.4.5 \
            jest-axe@^9.0.0 \
            @types/jest-axe@^3.5.5 \
            jsdom@^24.0.0 \
            @playwright/test@^1.46.0 \
            playwright@^1.46.0 \
            @lhci/cli@^0.13.0 \
            prettier@^3.3.3 \
            stylelint@^16.23.0 \
            stylelint-config-standard@^39.0.0 \
            eslint-plugin-jsx-a11y@^6.9.0 \
            wait-on@^8.0.0

          git add package.json package-lock.json || true

      - name: Write .stylelintrc.json (compatible with stylelint 16)
        shell: bash
        run: |
          cat > .stylelintrc.json <<'JSON'
          {
            "extends": ["stylelint-config-standard"],
            "rules": {
              "selector-class-pattern": "^[a-z0-9\-]+$",
              "no-descending-specificity": null
            }
          }
          JSON
          git add .stylelintrc.json

      - name: Ensure .gitignore and .env.example
        shell: bash
        run: |
          touch .gitignore
          if ! grep -qE '(^|/)\.env$' .gitignore; then
            echo ".env" >> .gitignore
          fi
          if [ -f ".env" ] && [ ! -f ".env.example" ]; then
            cp .env .env.example
            sed -i 's/=.*/=<set-in-ci>/' .env.example || true
          fi
          git add .gitignore .env.example || true

      - name: Create base CI workflow (lint+test+build) — only when WORKFLOW_PAT is present
        if: ${{ env.HAS_WORKFLOW_PAT == 'true' }}
        shell: bash
        run: |
          mkdir -p .github/workflows
          cat > .github/workflows/ci.yml <<'YAML'
          name: ci
          on:
            push:
              branches: [main]
            pull_request:
            workflow_dispatch:
          permissions:
            contents: read
          concurrency:
            group: ci-${{ github.ref }}
            cancel-in-progress: true
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: 20
                    cache: npm
                - run: npm ci
                - run: npm run lint --if-present
                - run: npm test --if-present -- --ci --reporters=default
                - run: npm run build --if-present
          YAML
          git add .github/workflows/ci.yml

      - name: Provide ci.yml as artifact when no WORKFLOW_PAT
        if: ${{ env.HAS_WORKFLOW_PAT != 'true' }}
        shell: bash
        run: |
          mkdir -p out
          cat > out/ci.yml <<'YAML'
          name: ci
          on:
            push:
              branches: [main]
            pull_request:
            workflow_dispatch:
          permissions:
            contents: read
          concurrency:
            group: ci-${{ github.ref }}
            cancel-in-progress: true
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: 20
                    cache: npm
                - run: npm ci
                - run: npm run lint --if-present
                - run: npm test --if-present -- --ci --reporters=default
                - run: npm run build --if-present
          YAML

      - uses: actions/upload-artifact@v4
        if: ${{ env.HAS_WORKFLOW_PAT != 'true' }}
        with:
          name: ci-workflow
          path: out/ci.yml

      - name: Create Pull Request (using PAT)
        if: ${{ env.HAS_WORKFLOW_PAT == 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.WORKFLOW_PAT }}
          branch: chore/qa-boot
          title: "chore: QA boot – fix stylelint conflict + base CI"
          commit-message: "chore: QA boot – fix stylelint conflict + base CI"
          body: |
            - Remove incompatible stylelint-config-prettier (<15) and pin stylelint@16 + stylelint-config-standard@39.
            - Add .stylelintrc.json compatible with Stylelint 16.
            - Ensure .gitignore ignores .env and provide .env.example.
            - Create base CI (Node 20, npm ci, lint/test/build).
          labels: qa, ci

      - name: Create Pull Request (fallback with GITHUB_TOKEN)
        if: ${{ env.HAS_WORKFLOW_PAT != 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chore/qa-boot
          title: "chore: QA boot – deps + configs"
          commit-message: "chore: QA boot – deps + configs"
          body: |
            ci.yml is attached as an artifact in this run. Add it manually or set WORKFLOW_PAT secret to allow auto-commit of workflow files.
          labels: qa, ci
